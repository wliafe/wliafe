<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>wliafe</title><link>https://wliafe.github.io</link><description>一种生活，一种态度</description><copyright>wliafe</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://wliafe.github.io/wliafe.jpg</url><title>avatar</title><link>https://wliafe.github.io</link></image><lastBuildDate>Thu, 02 Jan 2025 11:58:52 +0000</lastBuildDate><managingEditor>wliafe</managingEditor><ttl>60</ttl><webMaster>wliafe</webMaster><item><title>Spring</title><link>https://wliafe.github.io/post/Spring.html</link><description># 基本概念 &#13;
&#13;
## IoC(Inversion of Control)控制反转&#13;
&#13;
定义：使用对象时，由主动new产生对象转换为由外部提供对象，此过程中对象创建控制权由程序转移到外部，此思想称为控制反转&#13;
&#13;
## IoC容器&#13;
 &#13;
定义：spring中使用IoC容器实现IoC&#13;
&#13;
IoC容器负责对象的创建、初始化等一系列工作。</description><guid isPermaLink="true">https://wliafe.github.io/post/Spring.html</guid><pubDate>Thu, 02 Jan 2025 11:58:25 +0000</pubDate></item><item><title>MySQL</title><link>https://wliafe.github.io/post/MySQL.html</link><description># 常用数据库命令&#13;
&#13;
```sql&#13;
-- 展示所有数据库&#13;
show databases;&#13;
-- 使用数据库&#13;
use 数据库名称;&#13;
-- 展示当前数据库所有表&#13;
shwo tables;&#13;
-- 展示表结构&#13;
desc 表名称;&#13;
```&#13;
&#13;
# MySQL数据库导入导出&#13;
&#13;
## MySQL数据库导出数据和表结构&#13;
&#13;
```bash&#13;
mysqldump -u 用户名 -p 密码 数据库名 &gt; 数据库名.sql&#13;
```&#13;
&#13;
## MySQL数据库导出表结构&#13;
&#13;
```bash&#13;
mysqldump -u 用户名 -p 密码 -d 数据库名 &gt; 数据库名.sql&#13;
```&#13;
&#13;
## MySQL数据库导入.sql文件&#13;
&#13;
```bash&#13;
mysql -u 用户名 -p 密码 数据库名 &lt; 数据库名.sql&#13;
```&#13;
&#13;
**数据库中命令方式导入**&#13;
&#13;
```sql&#13;
-- 选择数据库&#13;
use 数据库名称;&#13;
-- 导入数据（注意sql文件的路径）&#13;
source sql文件路径;&#13;
```。</description><guid isPermaLink="true">https://wliafe.github.io/post/MySQL.html</guid><pubDate>Thu, 02 Jan 2025 11:57:50 +0000</pubDate></item><item><title>MyBatis-Plas</title><link>https://wliafe.github.io/post/MyBatis-Plas.html</link><description># 简介&#13;
&#13;
MyBatis-Plas是Java后端开发对数据库进行操作的工具，这里是[MyBatis-Plas的官方文档](https://baomidou.com/)，同时这里还有[哔哩哔哩的视频](https://www.bilibili.com/video/BV1Bq4y1f7YD/)可以学习。</description><guid isPermaLink="true">https://wliafe.github.io/post/MyBatis-Plas.html</guid><pubDate>Thu, 02 Jan 2025 11:57:09 +0000</pubDate></item><item><title>Maven</title><link>https://wliafe.github.io/post/Maven.html</link><description># 简介&#13;
&#13;
Java的包管理工具就是Maven，这是[Maven的官方网站](https://mvnrepository.com/)所有的Maven包都可以查到。</description><guid isPermaLink="true">https://wliafe.github.io/post/Maven.html</guid><pubDate>Thu, 02 Jan 2025 11:56:31 +0000</pubDate></item><item><title>正则表达式</title><link>https://wliafe.github.io/post/zheng-ze-biao-da-shi.html</link><description># (.*?)知识点&#13;
&#13;
利用这个符号可以在文字中添加变量，这个可以读取变量。</description><guid isPermaLink="true">https://wliafe.github.io/post/zheng-ze-biao-da-shi.html</guid><pubDate>Thu, 02 Jan 2025 11:55:53 +0000</pubDate></item><item><title>异常处理</title><link>https://wliafe.github.io/post/yi-chang-chu-li.html</link><description># 什么是全局异常处理器&#13;
&#13;
软件开发springboot项目过程中，不可避免的需要处理各种异常，spring mvc架构中各层会出现大量的try{...} catch{...} finally{...}代码块，不仅有大量的冗余代码，而且还影响代码的可读性。</description><guid isPermaLink="true">https://wliafe.github.io/post/yi-chang-chu-li.html</guid><pubDate>Thu, 02 Jan 2025 11:55:11 +0000</pubDate></item><item><title>后端环境配置</title><link>https://wliafe.github.io/post/hou-duan-huan-jing-pei-zhi.html</link><description># 简介&#13;
&#13;
后端环境包括Mysql数据库、redis和java。</description><guid isPermaLink="true">https://wliafe.github.io/post/hou-duan-huan-jing-pei-zhi.html</guid><pubDate>Thu, 02 Jan 2025 11:54:27 +0000</pubDate></item><item><title>Visual Studio Code</title><link>https://wliafe.github.io/post/Visual%20Studio%20Code.html</link><description># VScode 配置&#13;
&#13;
## B站视频&#13;
&#13;
[从零开始手把手教你配置属于你的VS Code](https://www.bilibili.com/video/BV1TT4y1g7aF?spm_id_from=333.999.0.0&amp;vd_source=c7f0a8a1b453261561b18cd69cebd8b3)&#13;
&#13;
## 资源&#13;
&#13;
**mingw64：**[百度网盘链接](https://pan.baidu.com/s/1L8OdqC-4VIfRvU0_cWa4jw?pwd=4i7v)&#13;
&#13;
**VS Code下载地址：**[VS Code官网](https://code.visualstudio.com/)&#13;
&#13;
## mingw64&#13;
&#13;
将资源中的mingw64下载后放到合适的位置，然后将文件路径加入到环境变量中&#13;
&#13;
![环境变量图片](https://github.com/user-attachments/assets/3f23d11a-2dff-4686-b1ff-035da3b6f32f)&#13;
&#13;
## VScode扩展下载&#13;
&#13;
C/C++：运行C和C++的软件&#13;
&#13;
![C/C++扩展图](https://github.com/user-attachments/assets/442f5666-d53a-47a3-8eb9-d1510ee16954)&#13;
&#13;
Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code：汉化软件&#13;
&#13;
![Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code扩展图](https://github.com/user-attachments/assets/6e389ffc-b040-413e-a39c-318b2b059acf)&#13;
&#13;
Code Runner：代码运行软件&#13;
&#13;
![Code Runner扩展图](https://github.com/user-attachments/assets/eb57ec5a-04a2-4eb9-bf18-82db9f51ebc7)&#13;
&#13;
Git Graph：git版本控制查看软件&#13;
&#13;
![Git Graph扩展图](https://github.com/user-attachments/assets/6de51f61-bc8e-403c-91ce-38e70c2d5b5c)&#13;
&#13;
## Code Runner 配置&#13;
&#13;
打开扩展设置&#13;
&#13;
![5](https://github.com/user-attachments/assets/1e12a7e3-1338-499c-82c2-6fb2789983bd)&#13;
&#13;
## C/C++ 配置&#13;
&#13;
![6](https://github.com/user-attachments/assets/36ee4d88-7291-4a9d-97ac-9a926a38e367)&#13;
&#13;
![7](https://github.com/user-attachments/assets/1623b70b-c47f-4f20-afce-b1bee020a90f)&#13;
&#13;
![8](https://github.com/user-attachments/assets/8c0620e5-7717-46ab-8a82-46cbabf79b96)&#13;
&#13;
![9](https://github.com/user-attachments/assets/bde10f96-b4a0-486c-a28d-16c10b8880fa)&#13;
&#13;
![10](https://github.com/user-attachments/assets/efd71fc0-dddc-407e-bc95-1f1b091aadb3)&#13;
&#13;
![11](https://github.com/user-attachments/assets/c8032e09-4c38-4be5-b35f-46cbb1a77be2)&#13;
&#13;
# VScode 代码片段&#13;
&#13;
用好了就是非常好用的快捷键&#13;
&#13;
```json&#13;
'Print to console': {&#13;
    'prefix': 'log',&#13;
 	  'body': [&#13;
 		  'console.log('$1');',&#13;
 		  '$2'&#13;
 	  ],&#13;
 	  'description': 'Log output to console'&#13;
 }&#13;
```。</description><guid isPermaLink="true">https://wliafe.github.io/post/Visual%20Studio%20Code.html</guid><pubDate>Thu, 02 Jan 2025 11:51:33 +0000</pubDate></item><item><title>Visual Studio</title><link>https://wliafe.github.io/post/Visual%20Studio.html</link><description># Visual Studio使用scanf和printf函数出现报错的解决方法&#13;
&#13;
在文件头部加入下面这段代码	&#13;
&#13;
```cpp&#13;
#define _CRT_SECURE_NO_WARNINGS&#13;
```&#13;
&#13;
# 创建新文件时自动生成#define _CRT_SECURE_NO_WARNINGS的方法&#13;
&#13;
在newc++file文件中加入下面这段代码&#13;
&#13;
```cpp&#13;
#define _CRT_SECURE_NO_WARNINGS&#13;
```&#13;
&#13;
newc++file文件位置在Microsoft Visual Studio\Common7\IDE\VC\vcprojectitems\newc++file。</description><guid isPermaLink="true">https://wliafe.github.io/post/Visual%20Studio.html</guid><pubDate>Thu, 02 Jan 2025 11:47:30 +0000</pubDate></item><item><title>StarUML</title><link>https://wliafe.github.io/post/StarUML.html</link><description># StarUML导出图片去除水印&#13;
&#13;
## 简介&#13;
&#13;
StarUML版本为4.0&#13;
&#13;
## 资源&#13;
&#13;
资源为已经修改好的app.asar文件，可直接对原来文件进行替换。</description><guid isPermaLink="true">https://wliafe.github.io/post/StarUML.html</guid><pubDate>Thu, 02 Jan 2025 11:46:46 +0000</pubDate></item><item><title>shell</title><link>https://wliafe.github.io/post/shell.html</link><description># 概论&#13;
&#13;
shell是我们通过命令行与操作系统沟通的语言。</description><guid isPermaLink="true">https://wliafe.github.io/post/shell.html</guid><pubDate>Thu, 02 Jan 2025 11:44:52 +0000</pubDate></item><item><title>Ollama</title><link>https://wliafe.github.io/post/Ollama.html</link><description># Ollama使用命令&#13;
&#13;
```bash&#13;
# 显示模型列表。</description><guid isPermaLink="true">https://wliafe.github.io/post/Ollama.html</guid><pubDate>Thu, 02 Jan 2025 11:44:19 +0000</pubDate></item><item><title>Markdown</title><link>https://wliafe.github.io/post/Markdown.html</link><description># Markdown编写数学公式&#13;
&#13;
## 简介&#13;
&#13;
在 Markdown 中，您可以使用 LaTeX 语法编辑数学公式。</description><guid isPermaLink="true">https://wliafe.github.io/post/Markdown.html</guid><pubDate>Thu, 02 Jan 2025 11:43:38 +0000</pubDate></item><item><title>LaTeX</title><link>https://wliafe.github.io/post/LaTeX.html</link><description># Tex Live下载与安装&#13;
&#13;
[清华镜像CTAN文档](https://mirrors.tuna.tsinghua.edu.cn/help/CTAN/)&#13;
&#13;
## 下载&#13;
&#13;
[官网下载](https://www.tug.org/texlive/acquire-netinstall.html)&#13;
&#13;
[清华镜像](https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/)&#13;
&#13;
官网速度特别慢，建议使用清华镜像。</description><guid isPermaLink="true">https://wliafe.github.io/post/LaTeX.html</guid><pubDate>Thu, 02 Jan 2025 11:41:45 +0000</pubDate></item><item><title>JetBrains软件破解</title><link>https://wliafe.github.io/post/JetBrains-ruan-jian-po-jie.html</link><description># JetBrains软件破解&#13;
&#13;
JetBrains的软件非常好用，我比较喜欢，但JetBrains的收费让人头疼，下面介绍JetBrains软件的破解方法。</description><guid isPermaLink="true">https://wliafe.github.io/post/JetBrains-ruan-jian-po-jie.html</guid><pubDate>Thu, 02 Jan 2025 11:40:49 +0000</pubDate></item><item><title>git</title><link>https://wliafe.github.io/post/git.html</link><description># 安装git&#13;
&#13;
[git下载地址](https://git-scm.com/downloads)&#13;
&#13;
点开后如下图：&#13;
&#13;
![1](https://github.com/user-attachments/assets/b76c59c6-50b4-487b-a5bb-46eda521d1ae)&#13;
&#13;
设置跟随下图&#13;
&#13;
![2](https://github.com/user-attachments/assets/67b7e6be-518d-4dca-97ea-2f2d640c7eb8)&#13;
&#13;
![3](https://github.com/user-attachments/assets/ec490a34-3d05-44bf-b7bb-03faa7d31493)&#13;
&#13;
![4](https://github.com/user-attachments/assets/48a18760-cc40-4a62-bd48-4d9c1f8fb685)&#13;
&#13;
![5](https://github.com/user-attachments/assets/f0ffb941-7661-4714-af74-88cb27bfd9a6)&#13;
&#13;
![6](https://github.com/user-attachments/assets/55fab334-43e8-4cfb-b493-437f2d806418)&#13;
&#13;
![7](https://github.com/user-attachments/assets/f8ee6492-3499-4526-b2dc-aa13ee98868b)&#13;
&#13;
![8](https://github.com/user-attachments/assets/1af2835b-e0c0-4aee-8bc9-cb3eca1ae410)&#13;
&#13;
![9](https://github.com/user-attachments/assets/fb6903ba-3929-4c55-a7e5-30e58b89be40)&#13;
&#13;
# 配置git&#13;
&#13;
单机右键，打开Git Bush Here然后通过输入命令设置用户名。</description><guid isPermaLink="true">https://wliafe.github.io/post/git.html</guid><pubDate>Thu, 02 Jan 2025 11:38:33 +0000</pubDate></item><item><title>docker</title><link>https://wliafe.github.io/post/docker.html</link><description># docker本地和容器之间的文件传输&#13;
&#13;
## 获取容器id全称&#13;
&#13;
```bash&#13;
docker inspect -f '{{.id}}' 容器名称&#13;
```&#13;
&#13;
## 本地文件传输到容器&#13;
&#13;
```bash&#13;
docker cp 本地文件路径 ID全称:容器路径&#13;
```&#13;
&#13;
## 容器文件传输到本地&#13;
&#13;
```bash&#13;
docker cp ID全称:容器路径 本地文件路径&#13;
```&#13;
&#13;
# docker容器创建&#13;
&#13;
## docker容器随docker启动而启动&#13;
&#13;
```bash&#13;
docker  --restart=always&#13;
```&#13;
&#13;
# Redis容器创建(最简单)&#13;
&#13;
```bash&#13;
docker run --name env-redis -d -p 6379:6379 redis --requirepass Redis.123&#13;
```&#13;
&#13;
# Mysql容器创建(最简单)&#13;
&#13;
```bash&#13;
docker run --name env-mysql -e MYSQL_ROOT_PASSWORD=Mysql.123 -d -p 3306:3306 mysql&#13;
```&#13;
&#13;
# Nginx容器创建&#13;
&#13;
```bash&#13;
docker run --name env-nginx -d -p 8080:80 nginx:stable-perl&#13;
```&#13;
&#13;
# LobeChat容器创建（内部包含Ollama）&#13;
&#13;
```bash&#13;
docker run --name env-lobechat -e OLLAMA_PROXY_URL=http://host.docker.internal:11434/v1 -d -p 3210:3210 lobehub/lobe-chat&#13;
```&#13;
&#13;
# dify容器创建&#13;
&#13;
```bash&#13;
git clone https://github.com/langgenius/dify.git&#13;
cd dify/docker&#13;
docker compose up -d&#13;
```。</description><guid isPermaLink="true">https://wliafe.github.io/post/docker.html</guid><pubDate>Thu, 02 Jan 2025 11:34:59 +0000</pubDate></item><item><title>Cmake</title><link>https://wliafe.github.io/post/Cmake.html</link><description># cmake的简单使用&#13;
&#13;
cmake的最简单粗暴的使用方法，仅限于Windows。</description><guid isPermaLink="true">https://wliafe.github.io/post/Cmake.html</guid><pubDate>Thu, 02 Jan 2025 11:34:13 +0000</pubDate></item><item><title>小米手机安装谷歌框架</title><link>https://wliafe.github.io/post/xiao-mi-shou-ji-an-zhuang-gu-ge-kuang-jia.html</link><description># 下载谷歌安装器Go&#13;
&#13;
从豌豆荚下载Go谷歌安装器，通过Go谷歌安装器安装谷歌三件套。</description><guid isPermaLink="true">https://wliafe.github.io/post/xiao-mi-shou-ji-an-zhuang-gu-ge-kuang-jia.html</guid><pubDate>Thu, 02 Jan 2025 11:33:25 +0000</pubDate></item><item><title>上网</title><link>https://wliafe.github.io/post/shang-wang.html</link><description># 工具&#13;
&#13;
## 简介&#13;
&#13;
下面这些都是科学上网的工具，其中电脑版我最推荐使用的是v2rayN，而手机版我最推荐使用v2rayNG。</description><guid isPermaLink="true">https://wliafe.github.io/post/shang-wang.html</guid><pubDate>Thu, 02 Jan 2025 11:32:30 +0000</pubDate></item><item><title>第二届西安邮电大学网络安全大赛(部分re)</title><link>https://wliafe.github.io/post/di-er-jie-xi-an-you-dian-da-xue-wang-luo-an-quan-da-sai-%28-bu-fen-re%29.html</link><description># ez_MATH&#13;
&#13;
下载文件后打开：&#13;
&#13;
```cpp&#13;
#include&lt;stdio.h&gt;&#13;
#include&lt;string.h&gt;&#13;
int main()&#13;
{&#13;
	//welcome to XUPT_CTF!&#13;
	//在CTF逆向中，首先需要建立起逆向思维，希望本次CTF校赛能够给你带来一些收获！&#13;
	char flag[] = 'xxx';&#13;
	for (int i = 0; i &lt; strlen(flag); i++)&#13;
	{&#13;
		//printf('%c', flag[i]);&#13;
		flag[i] -= 5;&#13;
		flag[i] += 2;&#13;
		flag[i] -= 1;&#13;
		flag[i] ^= 5;&#13;
		flag[i] += 2;&#13;
		flag[i] = (flag[i] + 1);&#13;
		printf('%d,', flag[i]);&#13;
	}&#13;
}&#13;
//encodeflag = {106, 112, 91, 105, 117, 79, 91, 120, 100, 97, 67, 109, 97, 71, 71, 71, 91, 109, 115, 127}&#13;
```&#13;
&#13;
提示加密后的flag为：&#13;
&#13;
```cpp&#13;
encodeflag = {106, 112, 91, 105, 117, 79, 91, 120, 100, 97, 67, 109, 97, 71, 71, 71, 91, 109, 115, 127}&#13;
```&#13;
&#13;
经过逆推后的代码是：&#13;
&#13;
```cpp&#13;
int s[] = {106, 112, 91, 105, 117, 79, 91, 120, 100, 97, 67, 109, 97, 71, 71, 71, 91, 109, 115, 127};&#13;
int main(void){&#13;
	for (int i = 0; i &lt; 20; i++)&#13;
	{&#13;
		s[i]--;&#13;
		s[i]-=2;&#13;
		s[i]^=5;&#13;
		s[i]+=1;&#13;
		s[i]-=2;&#13;
		s[i]+=5;&#13;
		printf('%c',s[i]);&#13;
	}&#13;
} &#13;
```&#13;
&#13;
# eazy_encode&#13;
&#13;
下载后打开程序：&#13;
&#13;
![1](https://github.com/user-attachments/assets/3a69e7ed-5137-4ec4-9b1d-f3815ed8dcc8)&#13;
&#13;
![2](https://github.com/user-attachments/assets/8d5a3f30-c842-479b-9ad3-8c8490b085ba)&#13;
&#13;
发现缺少两个dll文件,没关系，网上搜索直接下载，放入与exe文件同一个文件夹中。</description><guid isPermaLink="true">https://wliafe.github.io/post/di-er-jie-xi-an-you-dian-da-xue-wang-luo-an-quan-da-sai-%28-bu-fen-re%29.html</guid><pubDate>Thu, 02 Jan 2025 11:28:01 +0000</pubDate></item><item><title>安全网站</title><link>https://wliafe.github.io/post/an-quan-wang-zhan.html</link><description># 安全网站&#13;
&#13;
[攻防世界](https://adworld.xctf.org.cn/)，[BUUCTF](https://buuoj.cn/)&#13;
&#13;
[看雪](https://bbs.kanxue.com/)，[安全客](https://www.anquanke.com/)，[i春秋](https://www.ichunqiu.com/)，[吾爱破解](https://www.52pojie.cn/)&#13;
&#13;
[全国大学生安全竞赛](http://www.ciscn.cn/)&#13;
&#13;
# 安全工具&#13;
&#13;
[JSON在线](https://www.sojson.com/)，[在线工具](https://tool.lu/)，[CTF在线工具](http://www.hiencode.com/)&#13;
&#13;
[CMD5](https://www.cmd5.com/)，[MD5](https://www.somd5.com/)，[查看字符编码(UTF-8)](http://www.mytju.com/classcode/tools/encode_utf8.asp)&#13;
&#13;
[VIRUSTOTAL(病毒检测工具)](https://www.virustotal.com/)&#13;
&#13;
[Cheat Engine](https://cheatengine.org/)&#13;
&#13;
# 安全文档&#13;
&#13;
[CTF Wiki](https://ctf-wiki.org/)，[Windows API 参考手册](http://www.office-cn.net/t/api/api_content.htm)。</description><guid isPermaLink="true">https://wliafe.github.io/post/an-quan-wang-zhan.html</guid><pubDate>Thu, 02 Jan 2025 11:21:59 +0000</pubDate></item></channel></rss>